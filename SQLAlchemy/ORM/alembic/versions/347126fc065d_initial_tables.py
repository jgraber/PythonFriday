"""Initial tables

Revision ID: 347126fc065d
Revises: 
Create Date: 2021-06-12 17:27:18.833477

"""
from alembic import op
import sqlalchemy as sa
import imp
import os
alembic_helpers = imp.load_source('alembic_helpers', (
    os.getcwd() + '/' + op.get_context().script.dir + '/alembic_helpers.py'))

# revision identifiers, used by Alembic.
revision = '347126fc065d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if(alembic_helpers.table_does_not_exist('Author')):
        op.create_table('Author',
        sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('FirstName', sa.String(), nullable=False),
        sa.Column('LastName', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('Id')
        )
    
    if(alembic_helpers.table_does_not_exist('Employee')):
        op.create_table('Employee',
        sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('LastName', sa.String(), nullable=False),
        sa.Column('FirstName', sa.String(), nullable=False),
        sa.Column('BirthDate', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('Id')
        )
    
    if(alembic_helpers.table_does_not_exist('Publisher')):
        op.create_table('Publisher',
        sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('Name', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('Id')
        )
    
    if(alembic_helpers.table_does_not_exist('Book')):
        op.create_table('Book',
        sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('Title', sa.String(), nullable=False),
        sa.Column('ISBN', sa.String(length=13), nullable=False),
        sa.Column('Pages', sa.Integer(), nullable=True),
        sa.Column('PublishedBy', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['PublishedBy'], ['Publisher.Id'], ),
        sa.PrimaryKeyConstraint('Id')
        )
    
    if(alembic_helpers.table_does_not_exist('BookAuthor')):
        op.create_table('BookAuthor',
        sa.Column('BookId', sa.Integer(), nullable=False),
        sa.Column('AuthorId', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['AuthorId'], ['Author.Id'], ),
        sa.ForeignKeyConstraint(['BookId'], ['Book.Id'], ),
        sa.PrimaryKeyConstraint('BookId', 'AuthorId')
        )
    
    if(alembic_helpers.table_does_not_exist('BookDetail')):
        op.create_table('BookDetail',
        sa.Column('Id', sa.Integer(), nullable=False),
        sa.Column('Cover', sa.String(), nullable=True),
        sa.Column('Description', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['Id'], ['Book.Id'], ),
        sa.PrimaryKeyConstraint('Id')
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('BookDetail')
    op.drop_table('BookAuthor')
    op.drop_table('Book')
    op.drop_table('Publisher')
    op.drop_table('Employee')
    op.drop_table('Author')
    # ### end Alembic commands ###
